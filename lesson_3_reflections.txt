Q1: When would you want to use a remote repository rather than keeping all your work
    local?

    When I want to collaborate with other people around the globe on the same code, e.g. in an open-source project.
    If I want keep a backup of my sources on GitHub.

Q2: Why might you want to always pull changes manually rather than having Git
    automatically stay up-to-date with your remote repository?

    If there is a lot of changes in the remote repository I would often have to interrupt my work if git would automatically pull changes and I would have to resolve conflicts.
    If this is done manually I can better influence the point in time when I want to do the merges and have completed my work on e.g. a new feature.

Q3: Describe the differences between forks, clones, and branches.  When would you
    use one instead of another?

    Forks: I will use them mainly because I cannot directly commit to a repository on GitHub that is not my own. I will push my changes to the fork and the owner will then decide if the takes over my changes.
    Clones: I will use a clone for making a offline copy of a repository or if I want to take a look at someone elses code.
    Branch: I will use a branch if I e.g. want to develop a new feature or if I have to swith between my development of a new feature and and important bugfix (which I will keep in separate branches)

Q4: What is the benefit of having a copy of the last known state of the remote
    stored locally?

    It gives me the possibility to continue work offline.
    It gives me to compare which changes have been made to the remote repository since I was performing my last pull.

Q5: How would you collaborate without using Git or GitHub?  What would be easier,
    and what would be harder?

    Fill in your answer here

Q6: When would you want to make changes in a separate branch rather than directly in
    master?  What benefits does each approach have?

    Fill in your answer here
